//buildscript {
//    ext {
//        springBootVersion = '2.1.15.RELEASE'
//    }
//    repositories {
//        mavenCentral()
//    }
//    dependencies {
//        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
//    }
//}
//allprojects {
//    group 'com.mjc.school'
//    version '1.0-SNAPSHOT'
//}
//subprojects {
//    apply plugin: 'java'
//    apply plugin: 'idea'
//    apply plugin: 'io.spring.dependency-management'
//    ext {
//        springBootVersion = '2.1.15.RELEASE'
//        lombokVersion = '1.18.22'
//    }
//    sourceCompatibility = 1.8
//    targetCompatibility = 1.8
//    repositories {
//        mavenCentral()
//    }
//    dependencies{
//        implementation 'org.springframework.boot:spring-boot-starter:' + springBootVersion
//        compileOnly group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
//        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: "${lombokVersion}"
//        testImplementation group: 'junit', name: 'junit', version: '4.12'
//    }
//}

//repositories {
//    mavenCentral()
//}
//
//subprojects {
//    apply plugin: 'java'
//
//    dependencies {
//        testImplementation('org.junit.jupiter:junit-jupiter:5.8.1')
//    }
//}

plugins {
    id 'java'
}

wrapper {
    gradleVersion = gradlewVersion
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'
    group = 'com.mjc.school'
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion

    repositories {
        mavenCentral()
    }

    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    }

    test {
        useJUnitPlatform()
    }
}


task repack(type: Jar, dependsOn: ':module-main:build') {
    if (findProject(':module-main') != null) {
        entryCompression = ZipEntryCompression.STORED
        def buildJar = zipTree("${project(':module-main').buildDir}/libs/module-main-all.jar")
        from(buildJar) { into('/') }
        manifest {
            attributes(
                    'Main-Class': 'com.mjc.school.Main'
            )
        }
    }
}


